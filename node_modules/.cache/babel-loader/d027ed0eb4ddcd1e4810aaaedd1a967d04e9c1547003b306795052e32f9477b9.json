{"ast":null,"code":"var _jsxFileName = \"/home/k/MovieQuest/src/App.js\",\n  _s = $RefreshSig$();\nimport React, { useState, useEffect } from 'react';\nimport { jsxDEV as _jsxDEV } from \"react/jsx-dev-runtime\";\nconst CountdownTimer = () => {\n  _s();\n  const [seconds, setSeconds] = useState(120); // 2 minutes in seconds\n\n  useEffect(() => {\n    const countdown = setInterval(() => {\n      if (seconds > 0) {\n        setSeconds(seconds - 1);\n      }\n    }, 1000);\n    return () => clearInterval(countdown);\n  }, [seconds]);\n  const formatTime = time => {\n    // Pad single digit numbers with a leading zero\n    return time < 10 ? `0${time}` : time;\n  };\n  const minutes = Math.floor(seconds / 60);\n  const remainingSeconds = seconds % 60;\n  return /*#__PURE__*/_jsxDEV(\"div\", {\n    children: [minutes, \":\", formatTime(remainingSeconds)]\n  }, void 0, true, {\n    fileName: _jsxFileName,\n    lineNumber: 25,\n    columnNumber: 5\n  }, this);\n};\n_s(CountdownTimer, \"jgnm7yUXlEHk3v/B+gnIvgQurtk=\");\n_c = CountdownTimer;\nexport default CountdownTimer;\nvar _c;\n$RefreshReg$(_c, \"CountdownTimer\");","map":{"version":3,"names":["React","useState","useEffect","jsxDEV","_jsxDEV","CountdownTimer","_s","seconds","setSeconds","countdown","setInterval","clearInterval","formatTime","time","minutes","Math","floor","remainingSeconds","children","fileName","_jsxFileName","lineNumber","columnNumber","_c","$RefreshReg$"],"sources":["/home/k/MovieQuest/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\n\r\nconst CountdownTimer = () => {\r\n  const [seconds, setSeconds] = useState(120); // 2 minutes in seconds\r\n\r\n  useEffect(() => {\r\n    const countdown = setInterval(() => {\r\n      if (seconds > 0) {\r\n        setSeconds(seconds - 1);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(countdown);\r\n  }, [seconds]);\r\n\r\n  const formatTime = (time) => {\r\n    // Pad single digit numbers with a leading zero\r\n    return time < 10 ? `0${time}` : time;\r\n  };\r\n\r\n  const minutes = Math.floor(seconds / 60);\r\n  const remainingSeconds = seconds % 60;\r\n\r\n  return (\r\n    <div>\r\n      {minutes}:{formatTime(remainingSeconds)}\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default CountdownTimer;\r\n"],"mappings":";;AAAA,OAAOA,KAAK,IAAIC,QAAQ,EAAEC,SAAS,QAAQ,OAAO;AAAC,SAAAC,MAAA,IAAAC,OAAA;AAEnD,MAAMC,cAAc,GAAGA,CAAA,KAAM;EAAAC,EAAA;EAC3B,MAAM,CAACC,OAAO,EAAEC,UAAU,CAAC,GAAGP,QAAQ,CAAC,GAAG,CAAC,CAAC,CAAC;;EAE7CC,SAAS,CAAC,MAAM;IACd,MAAMO,SAAS,GAAGC,WAAW,CAAC,MAAM;MAClC,IAAIH,OAAO,GAAG,CAAC,EAAE;QACfC,UAAU,CAACD,OAAO,GAAG,CAAC,CAAC;MACzB;IACF,CAAC,EAAE,IAAI,CAAC;IAER,OAAO,MAAMI,aAAa,CAACF,SAAS,CAAC;EACvC,CAAC,EAAE,CAACF,OAAO,CAAC,CAAC;EAEb,MAAMK,UAAU,GAAIC,IAAI,IAAK;IAC3B;IACA,OAAOA,IAAI,GAAG,EAAE,GAAG,IAAIA,IAAI,EAAE,GAAGA,IAAI;EACtC,CAAC;EAED,MAAMC,OAAO,GAAGC,IAAI,CAACC,KAAK,CAACT,OAAO,GAAG,EAAE,CAAC;EACxC,MAAMU,gBAAgB,GAAGV,OAAO,GAAG,EAAE;EAErC,oBACEH,OAAA;IAAAc,QAAA,GACGJ,OAAO,EAAC,GAAC,EAACF,UAAU,CAACK,gBAAgB,CAAC;EAAA;IAAAE,QAAA,EAAAC,YAAA;IAAAC,UAAA;IAAAC,YAAA;EAAA,OACpC,CAAC;AAEV,CAAC;AAAChB,EAAA,CA1BID,cAAc;AAAAkB,EAAA,GAAdlB,cAAc;AA4BpB,eAAeA,cAAc;AAAC,IAAAkB,EAAA;AAAAC,YAAA,CAAAD,EAAA","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}