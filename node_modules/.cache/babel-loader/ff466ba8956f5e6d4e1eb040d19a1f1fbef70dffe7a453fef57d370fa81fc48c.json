{"ast":null,"code":"import React,{useState,useEffect}from'react';import'./App.css';import Task from'./Task';import{FontAwesomeIcon}from'@fortawesome/react-fontawesome';import{faPause}from'@fortawesome/free-solid-svg-icons';import{jsx as _jsx,jsxs as _jsxs}from\"react/jsx-runtime\";const pomsize=25*60;const App=()=>{const[seconds,setSeconds]=useState(pomsize);const[tasks,setTasks]=useState([]);const[taskInput,setTaskInput]=useState('');const[selectedTask,setSelectedTask]=useState();// Function to handle task submission\nconst submitTask=()=>{if(taskInput.trim()!==''){setTasks([...tasks,taskInput]);// Add new task to tasks array\nsetTaskInput('');// Clear input field\n}};// Countdown timer effect\nuseEffect(()=>{const countDown=setInterval(()=>{if(seconds>0){setSeconds(seconds-1);}},1000);return()=>clearInterval(countDown);// Cleanup interval on component unmount\n},[seconds]);// Format time utility function\nconst formatTime=time=>{return time<10?\"0\".concat(time):time;};const minutes=Math.floor(seconds/60);const remainSeconds=seconds%60;return/*#__PURE__*/_jsxs(\"div\",{className:\"columns\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"column is-one-third Tasks-Container\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"section\",children:/*#__PURE__*/_jsx(\"div\",{className:\"container\",children:/*#__PURE__*/_jsx(\"h1\",{className:\"is-size-1 has-text-centered\",children:\"Pomoreact\"})})}),/*#__PURE__*/_jsx(\"div\",{className:\"section Tasks-Section\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[tasks.length>0&&/*#__PURE__*/_jsx(\"div\",{className:\"TaskList\",children:tasks.map((task,index)=>/*#__PURE__*/_jsx(\"div\",{onClick:()=>{setSelectedTask(index);console.log(tasks[index]);},children:/*#__PURE__*/_jsx(Task,{title:task,counter:index+1,start:()=>{setSeconds(pomsize);}})}))}),/*#__PURE__*/_jsxs(\"div\",{className:\"Taskcard Task-Add\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Task-Size-Overlay\",children:/*#__PURE__*/_jsx(\"span\",{className:\"Task-Size\",children:\"+\"})}),/*#__PURE__*/_jsxs(\"div\",{className:\"Task-Content\",children:[/*#__PURE__*/_jsx(\"span\",{className:\"Task-Tag\",children:\"#Study\"}),/*#__PURE__*/_jsx(\"input\",{className:\"Task-Title Task-Input is-size-5\",value:taskInput,onChange:e=>setTaskInput(e.target.value),placeholder:\"Enter task title\"})]}),/*#__PURE__*/_jsx(\"button\",{className:\"button is-white\",onClick:submitTask,children:\"Add\"})]})]})})]})}),/*#__PURE__*/_jsx(\"div\",{className:\"column Timer\",children:/*#__PURE__*/_jsxs(\"div\",{className:\"container\",children:[/*#__PURE__*/_jsxs(\"div\",{className:\"Playing\",children:[/*#__PURE__*/_jsx(\"div\",{className:\"Pause is-size-1\",children:/*#__PURE__*/_jsx(\"div\",{className:\"Pause-Container\",onClick:()=>{setSeconds(25*60);},children:/*#__PURE__*/_jsx(FontAwesomeIcon,{icon:faPause})})}),/*#__PURE__*/_jsxs(\"div\",{children:[/*#__PURE__*/_jsx(\"h3\",{children:\"FOCUS ON\"}),/*#__PURE__*/_jsx(\"h1\",{className:\"is-size-1\",children:tasks[selectedTask]?tasks[selectedTask]:\"Let's Focus\"})]})]}),/*#__PURE__*/_jsxs(\"h1\",{className:\"Timer-Heading has-text-centered\",children:[formatTime(minutes),\":\",formatTime(remainSeconds)]}),/*#__PURE__*/_jsx(\"p\",{className:\"is-size-5\",children:\"The Pomodoro Technique is a famous time management method based on 25-minute stretches of focused work broken by five-minute breaks. Longer breaks, typically 15 to 30 minutes, are taken after four consecutive work intervals.\"})]})})]});};export default App;","map":{"version":3,"names":["React","useState","useEffect","Task","FontAwesomeIcon","faPause","jsx","_jsx","jsxs","_jsxs","pomsize","App","seconds","setSeconds","tasks","setTasks","taskInput","setTaskInput","selectedTask","setSelectedTask","submitTask","trim","countDown","setInterval","clearInterval","formatTime","time","concat","minutes","Math","floor","remainSeconds","className","children","length","map","task","index","onClick","console","log","title","counter","start","value","onChange","e","target","placeholder","icon"],"sources":["/home/k/MovieQuest/src/App.js"],"sourcesContent":["import React, { useState, useEffect } from 'react';\r\nimport './App.css';\r\nimport Task from './Task';\r\nimport { FontAwesomeIcon } from '@fortawesome/react-fontawesome';\r\nimport { faPause } from '@fortawesome/free-solid-svg-icons';\r\n\r\nconst pomsize = 25*60;\r\n\r\nconst App = () => {\r\n  const [seconds, setSeconds] = useState(pomsize);\r\n  const [tasks, setTasks] = useState([]);\r\n  const [taskInput, setTaskInput] = useState('');\r\n \r\n  const [selectedTask, setSelectedTask] = useState()\r\n\r\n  // Function to handle task submission\r\n  const submitTask = () => {\r\n    if (taskInput.trim() !== '') {\r\n      setTasks([...tasks, taskInput]); // Add new task to tasks array\r\n      setTaskInput(''); // Clear input field\r\n    }\r\n  };\r\n\r\n  // Countdown timer effect\r\n  useEffect(() => {\r\n    const countDown = setInterval(() => {\r\n      if (seconds > 0) {\r\n        setSeconds(seconds - 1);\r\n      }\r\n    }, 1000);\r\n\r\n    return () => clearInterval(countDown); // Cleanup interval on component unmount\r\n  }, [seconds]);\r\n\r\n  // Format time utility function\r\n  const formatTime = (time) => {\r\n    return time < 10 ? `0${time}` : time;\r\n  };\r\n\r\n  const minutes = Math.floor(seconds / 60);\r\n  const remainSeconds = seconds % 60;\r\n\r\n \r\n\r\n\r\n  return (\r\n    <div className='columns'>\r\n      {/* Left column for tasks */}\r\n      <div className='column is-one-third Tasks-Container'>\r\n        <div className='container'>\r\n          <div className='section'>\r\n            <div className='container'>\r\n              <h1 className='is-size-1 has-text-centered'>Pomoreact</h1>\r\n            </div>\r\n          </div>\r\n\r\n          <div className='section Tasks-Section'>\r\n            <div className='container'>\r\n              {/* Display tasks */}\r\n              {tasks.length > 0 && (\r\n                <div className='TaskList'>\r\n                  {tasks.map((task, index) => (\r\n                    <div onClick={()=>{\r\n                        setSelectedTask(index);\r\n                        console.log(tasks[index])\r\n                    }}>\r\n                        \r\n                        <Task title={task} counter={index+1} start={()=>{setSeconds(pomsize)  }}/>\r\n                    </div>\r\n                  ))}\r\n                </div>\r\n              )}\r\n\r\n              {/* Task input and add button */}\r\n              <div className='Taskcard Task-Add'>\r\n                <div className='Task-Size-Overlay'>\r\n                  <span className='Task-Size'>+</span>\r\n                </div>\r\n                <div className='Task-Content'>\r\n                  <span className='Task-Tag'>#Study</span>\r\n                  <input\r\n                    className='Task-Title Task-Input is-size-5'\r\n                    value={taskInput}\r\n                    onChange={(e) => setTaskInput(e.target.value)}\r\n                    placeholder='Enter task title'\r\n                  />\r\n                </div>\r\n                <button className='button is-white' onClick={submitTask}>\r\n                  Add\r\n                </button>\r\n              </div>\r\n            </div>\r\n          </div>\r\n        </div>\r\n      </div>\r\n\r\n      {/* Right column for timer */}\r\n      <div className='column Timer'>\r\n        \r\n          <div className='container'>\r\n          <div className='Playing'>\r\n            <div className='Pause is-size-1'>\r\n                <div className='Pause-Container' onClick={()=>{setSeconds(25*60)}}>\r\n                    <FontAwesomeIcon icon={faPause} />\r\n                </div>\r\n            </div>\r\n\r\n            <div>\r\n              <h3>FOCUS ON</h3>\r\n              <h1 className='is-size-1'>{tasks[selectedTask]?tasks[selectedTask]:\"Let's Focus\"}</h1>\r\n            </div>\r\n\r\n          </div>\r\n\r\n          \r\n          <h1 className='Timer-Heading has-text-centered'>\r\n              {formatTime(minutes)}:{formatTime(remainSeconds)}\r\n          </h1>\r\n\r\n          <p className='is-size-5'>The Pomodoro Technique is a famous time management method based on 25-minute stretches of focused work broken by five-minute breaks. Longer breaks, typically 15 to 30 minutes, are taken after four consecutive work intervals.</p>\r\n        </div>\r\n      </div>  \r\n    </div>\r\n  );\r\n};\r\n\r\nexport default App;\r\n"],"mappings":"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","ignoreList":[]},"metadata":{},"sourceType":"module","externalDependencies":[]}